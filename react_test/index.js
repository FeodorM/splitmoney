// Generated by CoffeeScript 1.10.0
(function() {
  var Photo, PhotoGallery, button, createView, div, h1, i, img, pictures, ref, render, span, texts,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  createView = function(spec) {
    return React.createFactory(React.createClass(spec));
  };

  render = ReactDOM.render;

  ref = React.DOM, div = ref.div, img = ref.img, h1 = ref.h1, span = ref.span, button = ref.button;

  pictures = ['pictures/avacyn.jpg', 'pictures/karn.jpg', 'pictures/jace.jpg', 'pictures/jace1.jpg', 'pictures/chandra.jpg'];

  texts = ['Avacyn', 'Karn', 'Jace', 'Jace, the living guildpack', 'Chandra'];

  Photo = (function(superClass) {
    extend(Photo, superClass);

    function Photo(props) {
      this.toggleLiked = bind(this.toggleLiked, this);
      Photo.__super__.constructor.call(this, props);
      this.state = {
        liked: false
      };
    }

    Photo.prototype.toggleLiked = function() {
      return this.setState({
        liked: !this.state.liked
      });
    };

    Photo.prototype.render = function() {
      var buttonClass;
      buttonClass = this.state.liked ? 'active' : '';
      return div({
        className: 'photo'
      }, [
        img({
          src: this.props.src
        }), div({
          className: 'bar'
        }, [
          button({
            onClick: this.toggleLiked,
            className: buttonClass
          }, 'â™¥'), span({}, this.props.caption)
        ])
      ]);
    };

    return Photo;

  })(React.Component);

  Photo = React.createFactory(Photo);

  PhotoGallery = (function(superClass) {
    extend(PhotoGallery, superClass);

    function PhotoGallery() {
      return PhotoGallery.__super__.constructor.apply(this, arguments);
    }

    PhotoGallery.prototype.render = function() {
      var photos;
      photos = this.props.photos.map(function(photo) {
        return Photo({
          src: photo.url,
          caption: photo.caption,
          key: photo.id
        });
      });
      return div({
        className: 'photo-gallery'
      }, photos);
    };

    return PhotoGallery;

  })(React.Component);

  PhotoGallery = React.createFactory(PhotoGallery);

  this.data = (function() {
    var j, ref1, results;
    results = [];
    for (i = j = 0, ref1 = pictures.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {
      results.push({
        url: pictures[i],
        caption: texts[i]
      });
    }
    return results;
  })();

  render(PhotoGallery({
    photos: data
  }), document.body);

}).call(this);
